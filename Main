import machine as m
import time as t

duration = 150000  # this number of milliseconds

n_element = 3
samples = [0 for i in range(n_element)]
for i in range(n_element):
    samples[i] = 0


def get_avg(a):
    total = 0
    for i in range(len(a)):
        total += a[i]
    return int(total / len(a))



i = 0

red_connect = m.Pin(4, m.Pin.IN)
yellow_connect = m.Pin(5, m.Pin.IN)

above_threshold_LED = m.Pin(2, m.Pin.OUT)  # Red LED
below_threshold_LED = m.Pin(3, m.Pin.OUT)  # Yellow LED

def get_red_connect():
    return red_connect.value() == 0


def get_yellow_connect():
    return yellow_connect.value() == 0

adc = m.ADC(m.Pin(26))  # Heart Monitor
adc.read_u16()

potent = m.ADC(m.Pin(27))  # Potentiometer
potent.read_u16()

start = t.ticks_ms()
time = t.ticks_diff(t.ticks_ms(), start)
print("Value, Time")
above_threshold = False
last_time = 0
period = 0

while True:

    if get_yellow_connect() and get_red_connect():
        # LED1.value(led1_value)
        # if i % 1000 == 0:  # swap led_value on multiples of 1000
        # led_value = not led1_value

        sensor_value = adc.read_u16()
        samples[i % n_element] = sensor_value
        i += 1
        avg_value = get_avg(samples)
        threshold = potent.read_u16()

        if avg_value > threshold:

            above_threshold = True

        else:
            above_threshold = False

        above_threshold_LED.value(above_threshold)
        below_threshold_LED.value(not above_threshold)

        # print ("{}, {}".format(avg_value, time))        #print value and time
        # print("{}, {}".format(samples, avg_value))  #print samples and average
        # print(threshold)
        print(avg_value)

    else:
        above_threshold_LED.value(not get_red_connect())
        below_threshold_LED.value(not get_yellow_connect())

    t.sleep(0.001)
